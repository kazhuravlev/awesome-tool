// Code generated by options-gen. DO NOT EDIT.
package httph

import (
	"net/http"
	"sync"

	"golang.org/x/time/rate"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from variable
	o.client = defaultOptions.client
	o.rateLimitMapMu = defaultOptions.rateLimitMapMu
	o.rateLimitMap = defaultOptions.rateLimitMap
	o.defaultRlConstructor = defaultOptions.defaultRlConstructor

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithClient(opt *http.Client) OptOptionsSetter {
	return func(o *Options) {
		o.client = opt
	}
}

func WithRateLimitMapMu(opt *sync.Mutex) OptOptionsSetter {
	return func(o *Options) {
		o.rateLimitMapMu = opt
	}
}

func WithRateLimitMap(opt map[string]*rate.Limiter) OptOptionsSetter {
	return func(o *Options) {
		o.rateLimitMap = opt
	}
}

func WithDefaultRlConstructor(opt func() *rate.Limiter) OptOptionsSetter {
	return func(o *Options) {
		o.defaultRlConstructor = opt
	}
}

func (o *Options) Validate() error {
	return nil
}
